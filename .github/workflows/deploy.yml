name: Deploy

on:
  release:
    types: [published, edited]
  push:
    branches:
      - master

jobs:
  build:
    name: BuildImage
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | POETRY_VERSION=1.0.10 python
          source $HOME/.poetry/env
          poetry config virtualenvs.create false
          poetry install --no-dev
      - name: Build image and publish to registry
        env:
          IMAGE_NAME: mirumon/mirumon-backend
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker build -t $IMAGE_NAME:dev .
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USER --password-stdin
          docker push $IMAGE_NAME:dev

  deploy:
    name: Deploy
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@master
      - name: Deploy service with traefik over ssh
        env:
          MIRUMON_BACKEND_DOMAIN: ${{ secrets.MIRUMON_BACKEND_DOMAIN }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SHARED_KEY: ${{ secrets.SHARED_KEY }}
          POSTGRES_DSN: ${{ secrets.POSTGRES_DSN }}
          REDIS_DSN: ${{ secrets.REDIS_DSN }}
          RABBIT_DSN: ${{ secrets.RABBIT_DSN }}
        run: |
          which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
          eval $(ssh-agent -s)
          echo "add ssh key"
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          ssh -o "UserKnownHostsFile=/dev/null" -o "StrictHostKeyChecking=no" $SSH_USER@$SSH_HOST "
            docker pull mirumon/mirumon-backend:dev && \
            (docker rm -f mirumon-backend || true) && \
            docker run -d \
              --name mirumon-backend \
              --network web \
              --restart always \
              --label \"traefik.enable=true\" \
              --label \"traefik.docker.network=web\" \
              --label \"traefik.http.routers.mirumon-backend.rule=Host(\\\`$MIRUMON_BACKEND_DOMAIN\\\`)\" \
              --label \"traefik.http.routers.mirumon-backend.entrypoints=web-secure\" \
              --label \"traefik.http.routers.mirumon-backend.tls.certresolver=letsencrypt\" \
              --label \"traefik.http.routers.mirumon-backend.middlewares=http-to-https@file\" \
              --label \"traefik.http.services.mirumon-backend.loadbalancer.server.port=8000\" \
              -e SECRET_KEY=\"$SECRET_KEY\" \
              -e SHARED_KEY=\"$SHARED_KEY\" \
              -e POSTGRES_DSN=\"$POSTGRES_DSN\" \
              -e REDIS_DSN=\"$REDIS_DSN\" \
              -e RABBIT_DSN=\"$RABBIT_DSN\" \
              mirumon/mirumon-backend:dev"
